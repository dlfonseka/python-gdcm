name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-10.15]
        python: [36, 37, 38, 39, 310]
        bitness: [32, 64]
        include:
          # Run 32 and 64 bit version in parallel for Linux and Windows
          - os: windows-latest
            bitness: 64
            platform_id: win_amd64
          - os: windows-latest
            bitness: 32
            platform_id: win32
          - os: ubuntu-latest
            bitness: 64
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            bitness: 32
            platform_id: manylinux_i686
          - os: macOS-10.15
            bitness: 64
            platform_id: macosx_x86_64
        exclude:
          - os: macOS-10.15
            bitness: 32

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-python@v2
        name: Install Python host for cibuildwheel
        with:
          python-version: '3.9'

        # Visual Studio
      - name: Set up MSVC x86
        if: matrix.os == 'windows-latest' && matrix.bitness == '32'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

        # Visual Studio
      - name: Set up MSVC x64
        if: matrix.os == 'windows-latest' && matrix.bitness == '64'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.3.1

      - name: Build wheels
        # to supply options, put them in 'env', like:
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}

          # Include latest Python beta
          CIBW_PRERELEASE_PYTHONS: True

          CIBW_BEFORE_ALL_LINUX: |
            yum install -y gcc-c++ pcre-devel
            /opt/python/cp38-cp38/bin/python -m pip install ninja
            ln -s /opt/python/cp38-cp38/bin/ninja /usr/bin/ninja
            if [[ ! -e $(command -v swig) ]]; then
              curl -L https://sourceforge.net/projects/swig/files/swig/swig-4.0.2/swig-4.0.2.tar.gz/download --output /tmp/swig.tar.gz
              mkdir /tmp/swig
              tar -xvzf /tmp/swig.tar.gz -C /tmp/swig --strip-components 1 &> /dev/null
              pushd /tmp/swig
              ./configure --without-alllang --with-python3
              make -j2 && make install > /dev/null
              popd
            fi

          CIBW_BEFORE_ALL_WINDOWS: |
            choco upgrade chocolatey -y
            choco install swig -f -y --no-progress
            pip install ninja cmake

          CIBW_BEFORE_ALL_MACOS: |
            brew install swig ninja cmake

        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
